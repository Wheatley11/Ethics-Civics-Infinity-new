###########################
# Utopia On-Action Events #
###########################

namespace = ethic_rebuild_ascension_perks

# 征服未知
country_event = {
	id = ethic_rebuild_ascension_perks.3000
	title = utopia.2650.name
	desc = utopia.2650.desc
	picture = GFX_evt_psionics
	show_sound = event_the_great_awakening
	is_triggered_only = yes

	immediate = {
		every_owned_pop = {
			limit = {
				is_same_species = root
				has_trait = trait_latent_psionic
			}
			modify_species = {
				species = this
				remove_trait = trait_latent_psionic
				add_trait = trait_psionic
				effect = {
					save_event_target_as = psionic_species
				}
			}
		}
		change_dominant_species = { species = event_target:psionic_species change_all = yes }
	}

	option = {
		name = ethic_rebuild_ascension_perks.3000.a
		hidden_effect = {
			every_country = {
				limit = {
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
				every_owned_leader = {
					limit = {
						species = {
							has_trait = trait_psionic
							is_same_value = event_target:psionic_species
						}
					}
					add_trait = leader_trait_psionic
				}
				every_pool_leader = {
					limit = {
						species = {
							has_trait = trait_psionic
							is_same_value = event_target:psionic_species
						}
					}
					add_trait = leader_trait_psionic
				}
			}
			observer_event = { id = observer.6 }
			every_country = {
				limit = {
					is_ai = no
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = { id = utopia.2652 }
			}
			country_event = { id = ethic_rebuild_ascension_perks.3005 days = 30 random = 20 }
		}
	}
}

# 冲虚境
country_event = {
	id = ethic_rebuild_ascension_perks.3005
	title = "utopia.2655.name"
	desc = "utopia.2655.desc"
	picture = GFX_evt_psionics
	show_sound = event_psionic
	trackable = yes
	
	is_triggered_only = yes

	option = {
		name = "utopia.2655.a"
		hidden_effect = { save_event_target_as = faill_breach_shroud_owner }
		begin_event_chain = {
			event_chain = conquer_the_unknown_project
			target = root
		}
		capital_scope = {
			enable_special_project = {
				name = "CONQUER_THE_UNKNOWN_PROJECT_1"
				location = this
				owner = root
			}
		}
	}
}

country_event = {
	id = ethic_rebuild_ascension_perks.3006
	title = "ethic_rebuild_ascension_perks.3006.name"
	desc = "ethic_rebuild_ascension_perks.3006.desc"
	picture = GFX_evt_psionics
	show_sound = event_psionic
	
	is_triggered_only = yes
	option = {
		name = "ethic_rebuild_ascension_perks.3006.a"
		hidden_effect = {
			country_event = { id = ethic_rebuild_ascension_perks.3007 days = 1800 }
			add_research_option = tech_psi_jump_drive_1
		}
	}
}

country_event = {
	id = ethic_rebuild_ascension_perks.3007
	title = "ethic_rebuild_ascension_perks.3007.name"
	desc = "ethic_rebuild_ascension_perks.3007.desc"
	picture = GFX_evt_matter_decompressor
	show_sound = event_psionic
	
	is_triggered_only = yes
	option = {
		name = "ethic_rebuild_ascension_perks.3007.a"
		hidden_effect = {
			save_event_target_as = faill_breach_shroud_owner
			capital_scope = {
				enable_special_project = {
					name = "CONQUER_THE_UNKNOWN_PROJECT_2"
					location = this
					owner = root
				}
			}
		}
	}
}

country_event = {
	id = ethic_rebuild_ascension_perks.3008
	title = "ethic_rebuild_ascension_perks.3008.name"
	desc = "ethic_rebuild_ascension_perks.3008.desc"
	picture = GFX_evt_unspeakable_horror
	show_sound = event_psionic
	
	is_triggered_only = yes
	option = {
		name = "ethic_rebuild_ascension_perks.3008.a"
		hidden_effect = {
			country_event = { id = ethic_rebuild_ascension_perks.3009 days = 1800 }
			add_research_option = tech_precognition_interface
		}
	}
}

country_event = {
	id = ethic_rebuild_ascension_perks.3009
	title = "ethic_rebuild_ascension_perks.3009.name"
	desc = "ethic_rebuild_ascension_perks.3009.desc"
	picture = GFX_evt_psionic_battle
	show_sound = event_psionic
	is_triggered_only = yes
	option = {
		name = ethic_rebuild_ascension_perks.3009.a
		hidden_effect = {
			save_event_target_as = faill_breach_shroud_owner
			capital_scope = {
				enable_special_project = {
					name = "CONQUER_THE_UNKNOWN_PROJECT_3"
					location = this
					owner = root
				}
			}
		}
	}
}

country_event = {
	id = ethic_rebuild_ascension_perks.3010
	title = "ethic_rebuild_ascension_perks.3010.name"
	desc = "ethic_rebuild_ascension_perks.3010.desc"
	picture = GFX_evt_zro_3
	show_sound = event_psionic
	
	is_triggered_only = yes
	option = {
		name = "ethic_rebuild_ascension_perks.3010.a"
		hidden_effect = {
			country_event = { id = ethic_rebuild_ascension_perks.3011 days = 30 }
			add_research_option = tech_psionic_shield
		}
	}
}

country_event = {
	id = ethic_rebuild_ascension_perks.3011
	title = "ethic_rebuild_ascension_perks.3011.name"
	desc = "ethic_rebuild_ascension_perks.3011.desc"
	picture = GFX_evt_zro_2
	show_sound = event_psionic
	is_triggered_only = yes
	option = {
		name = ethic_rebuild_ascension_perks.3011.a
		hidden_effect = {
			save_event_target_as = faill_breach_shroud_owner
			start_situation = { type = conquer_the_unknown }
		}
	}
}

country_event = {
	id = ethic_rebuild_ascension_perks.3015
	title = "ethic_rebuild_ascension_perks.3015.name"
	desc = "ethic_rebuild_ascension_perks.3015.desc"
	picture = GFX_evt_vortex
	show_sound = event_psionic
	is_triggered_only = yes
	immediate = {
		end_event_chain = conquer_the_unknown_project
	}
	option = {
		name = ethic_rebuild_ascension_perks.3015.a
		hidden_effect = {
			create_species = {
				name = "NAME_Robot"
				plural = "NAME_Robots"
				class = ROBOT
				namelist = this
				portrait = "default_robot"
				traits = {
					trait = "trait_mechanical"
					trait = "trait_psionic"
				}
				effect = {
					if = {
						limit = {
							prev = { use_robot_portrait_sd_hum_robot = yes }
						}			
						change_species_portrait = sd_hum_robot
					}
				}
				effect = {
					if = {
						limit = {
							prev = { use_robot_portrait_sd_mam_robot = yes }
						}			
						change_species_portrait = sd_mam_robot
					}
				}		
				effect = {
					if = {
						limit = {
							prev = { use_robot_portrait_sd_rep_robot = yes }
						}			
						change_species_portrait = sd_rep_robot
					}
				}
				effect = {
					if = {
						limit = {
							prev = { use_robot_portrait_sd_avi_robot = yes }
						}			
						change_species_portrait = sd_avi_robot
					}
				}
				effect = {
					if = {
						limit = {
							prev = { use_robot_portrait_sd_art_robot = yes }
						}			
						change_species_portrait = sd_art_robot
					}
				}
				effect = {
					if = {
						limit = {
							prev = { use_robot_portrait_sd_mol_robot = yes }
						}			
						change_species_portrait = sd_mol_robot
					}
				}
				effect = {
					if = {
						limit = {
							prev = { use_robot_portrait_sd_fun_robot = yes }
						}			
						change_species_portrait = sd_fun_robot
					}
				}
				effect = {
					if = {
						limit = {
							prev = { use_robot_portrait_sd_pla_robot = yes }
						}			
						change_species_portrait = sd_pla_robot
					}
				}
				effect = {
					if = {
						limit = {
							prev = {
								host_has_dlc = "Lithoids Species Pack"
								OR = {
									is_species_class = LITHOID
									species_portrait = lith_machine
								}
							}
						}			
						change_species_portrait = lith_machine
					}
				}
			}
			set_built_species = last_created_species
			every_owned_pop = {
				limit = {
					NOT = { is_same_species = root }
					has_trait = trait_mechanical
				}
				change_species = last_created_species
			}
			every_owned_leader = {
				limit = {
					is_same_species = root
					species = {
						has_trait = trait_mechanical
					}
				}
				add_trait = leader_trait_psionic
			}
			every_pool_leader = {
				limit = {
					is_same_species = root
					species = {
						has_trait = trait_mechanical
					}
				}
				add_trait = leader_trait_psionic
			}
		}
	}
}

country_event = {
	id = ethic_rebuild_ascension_perks.10000
	is_triggered_only = yes
	hide_window = yes 
	trigger = {
		is_ai = no
	}
	immediate = {
		if = {
			limit = {
				has_ascension_perk = ap_anarchy_utopia
				NOT = { has_valid_civic = civic_anarchism }
				has_modifier = mod_tr_tr_ancom_firm_ideal_no
			}
			remove_modifier = mod_tr_tr_ancom_firm_ideal_no
			add_modifier = { modifier = mod_tr_tr_ancom_firm_ideal }
		}
		if = {
			limit = {
				has_ascension_perk = ap_anarchy_utopia
				has_valid_civic = civic_anarchism 
				has_modifier = mod_tr_tr_ancom_firm_ideal
			}
			remove_modifier = mod_tr_tr_ancom_firm_ideal
			add_modifier = { modifier = mod_tr_tr_ancom_firm_ideal_no }
		}
	}
}