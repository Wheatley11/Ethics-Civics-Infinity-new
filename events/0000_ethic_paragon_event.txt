namespace = paragon

# On Election end, clean up paragon.500 flags and reset cooldowns for democracies.
country_event = {
    id = paragon.501
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                is_direct_democratic_authority = yes
                ruler = {
                    NOT = {
                        has_leader_flag = ruler_at_election_start
                    }
                }
            }
            set_government_cooldown = no
            reset_policy_cooldowns = yes
        }
        remove_country_flag = election_under_way
        every_owned_leader = {
            remove_leader_flag = councilor_at_election_start
            remove_leader_flag = ruler_at_election_start
        }
    }
}

country_event = { #Leader grows - 10 yo
    id = paragon.3114
    title = "paragon.3114.name"
    desc = "paragon.3114.desc"
    picture = GFX_evt_board_meeting
    show_sound = event_finding_loot
    fire_only_once = yes

    is_triggered_only = yes

    immediate = {
    }

    option = {
        name = paragon.3114.a
        trigger = { is_xenophile = yes }
        set_global_flag = leader_raised_xenophile
    }
    option = {
        name = paragon.3114.b
        trigger = { is_xenophobe = yes }
        set_global_flag = leader_raised_xenophobe
    }
    option = {
        name = paragon.3114.c
        trigger = { is_pacifist = yes }
        set_global_flag = leader_raised_pacifist
    }
    option = {
        name = paragon.3114.d
        trigger = { is_militarist = yes }
        set_global_flag = leader_raised_militarist
    }
    option = {
        name = paragon.3114.e
        trigger = { is_egalitarian = yes }
        set_global_flag = leader_raised_egalitarian
    }
    option = {
        name = paragon.3114.f
        trigger = { is_authoritarian = yes }
        set_global_flag = leader_raised_authoritarian
    }
    option = {
        name = paragon.3114.g
        trigger = { is_spiritualist = yes }
        set_global_flag = leader_raised_spiritualist
    }
    option = {
        name = paragon.3114.h
        trigger = { is_materialist = yes }
        set_global_flag = leader_raised_materialist
    }
    option = {
        name = paragon.3114.i
        trigger = { is_socialism = yes }
        set_global_flag = leader_raised_socialism
    }
    option = {
        name = paragon.3114.j
        trigger = { is_capitalism = yes }
        set_global_flag = leader_raised_capitalism
    }

    after = {
        country_event = { id = paragon.3115 days = 3600 }
    }
}

country_event = { # HIRE/DISMISS Exakeides
    id = paragon.3116
    title = "paragon.3116.name"
    desc = "paragon.3116.desc"
    diplomatic = yes
    fire_only_once = yes
    is_triggered_only = yes
    show_sound = par_event_keides

    picture = GFX_leader_recruitment_bg_legendary_keides
    event_window_type = leader_recruit

    picture_event_data = {
        portrait = event_target:legendary_lost_leader
        room = galactic_custodian_room
    }

    trigger = {
        exists = event_target:legendary_lost_leader
    }

    option = {
        # Special tag to make mark this is the hire option
        name = HIRE
        tag = hire_leader
        sound = "par_keides_hire"

        hidden_effect = {
            clone_leader = {
                target = event_target:legendary_lost_leader
            }
            last_created_leader = {
                set_leader_flag = exakeides
                set_leader_flag = legendary_leader
                save_global_event_target_as = legendary_lost_leader
                set_leader_flag = immune_to_negative_traits
                add_trait_no_notify = leader_trait_legendary_far_from_home
                set_owner = root
            }
            switch = {
                trigger = has_global_flag
                leader_raised_xenophile = {
                    event_target:legendary_lost_leader = { change_background_ethic = ethic_xenophile }
                }
                leader_raised_xenophobe = {
                    event_target:legendary_lost_leader = { change_background_ethic = ethic_xenophobe }
                }
                leader_raised_militarist = {
                    event_target:legendary_lost_leader = { change_background_ethic = ethic_militarist }
                }
                leader_raised_pacifist = {
                    event_target:legendary_lost_leader = { change_background_ethic = ethic_pacifist }
                }
                leader_raised_egalitarian = {
                    event_target:legendary_lost_leader = { change_background_ethic = ethic_egalitarian }
                }
                leader_raised_authoritarian = {
                    event_target:legendary_lost_leader = { change_background_ethic = ethic_authoritarian }
                }
                leader_raised_spiritualist = {
                    event_target:legendary_lost_leader = { change_background_ethic = ethic_spiritualist }
                }
                leader_raised_materialist = {
                    event_target:legendary_lost_leader = { change_background_ethic = ethic_materialist }
                }
                leader_raised_socialism = {
                    event_target:legendary_lost_leader = { change_background_ethic = ethic_socialism }
                }
                leader_raised_capitalism = {
                    event_target:legendary_lost_leader = { change_background_ethic = ethic_capitalism }
                }
            }

            random_owned_planet = {
                limit = {
                    is_variable_set = paragon_memory_vault
                }
                change_variable = {
                    which = paragon_memory_vault
                    value = 1
                }
            }
            country_event = { id = paragon.3117 days = 60 random = 60 }
        }

        create_message = {
            type = MESSAGE_RECRUITED_LEADER
            localization =  MESSAGE_RECRUITED_LEADER_DESC
            days = @toast_message_days
            target = event_target:legendary_lost_leader
            variable = {
                type = name
                localization = LEADER
                scope = event_target:legendary_lost_leader
            }
            variable = {
                key = "border"
                value = "GFX_border_legendary"
            }
        }
    }

    option = {
        name = DISMISS
        # Special tag to mark this as the dismiss option
        tag = dismiss_leader
        sound = "par_keides_dismiss"

        hidden_effect = {
            event_target:legendary_lost_leader = {
                kill_leader = { show_notification = no }
            }
        }
    }

    option = {
        name = paragon.3116.a
        response_text = paragon.3116.a.response
        is_dialog_only = yes
    }
    option = {
        name = paragon.3116.b
        response_text = paragon.3116.b.response
        is_dialog_only = yes
    }
    option = {
        name = paragon.3116.c
        response_text = paragon.3116.c.response
        is_dialog_only = yes
    }
}

country_event = { #After the Fall - First negotiation batch - with Reformists
	id = paragon.5210
	title = "paragon.5210.name"
	desc = "paragon.5210.desc"
	picture = GFX_evt_galactic_senate
	show_sound = event_factions

	is_triggered_only = yes

	trigger = {
		exists = ruler
		ruler = { has_leader_flag = paragon_origin_legendary_leader }
	}

	immediate = {
		set_country_flag = main_player_empire_@this
	}

	option = {
		name = paragon.5210.a
		paragon_origin_reformists_negotiations_effect = yes
		country_event = {
			id = paragon.5220 days = 15 random = 30
		}
	}
	option = {
		name = paragon.5210.b
		country_event = {
			id = paragon.5221 days = 15 random = 15
		}
		custom_tooltip = paragon.5210.b.tt
	}
	option = {
		trigger = {
			ruler = {
				check_variable = {
					which = paragon_origin_delusion_tier
					value >= 10
				}
			}
		}
		name = paragon.5210.c
		hidden_effect = {
			ruler = {
				while = {
					count = 5
					paragon_origin_gain_delusion = yes
				}	
			}
		}
		country_event = {
			id = paragon.5222 days = 15 random = 15
		}
		custom_tooltip = paragon.5210.c.tt
	}
	option = {
		name = paragon.5210.d
		trigger = {
			any_system_within_border = {
				is_capital_system = no
				any_system_colony = { has_modifier = paragon_origin_reformists }
			}
			NOT = { has_valid_civic = civic_fanatic_purifiers }
		}
		hidden_effect = {
			random_owned_leader = {
				remove_leader_flag = paragon_origin_legendary_leader
				limit = { is_ruler = yes }
				kill_leader = { show_notification = no }
			}
		}
		add_modifier = {
			modifier = paragon_origin_rebel_player
			days = -1
		}
		set_origin = origin_legendary_leader_death
		shift_ethic = ethic_fanatic_egalitarian
        shift_ethic = ethic_fanatic_socialism
		hidden_effect = {
			paragon_origin_launch_rebelion = yes
			country_event = {
				id = paragon.5211 days = 15 random = 15
			}
		}
		if = {
			limit = { host_has_dlc = "Megacorp" }
			hidden_effect = {
				force_remove_civic = 2
			}
			change_government = {
				authority = auth_democratic
				remove_invalid_civics = yes
				civics = {
					civic = civic_idealistic_foundation
					civic = civic_shared_burden
				}
			}
		}
		else = {
			hidden_effect = {
				force_remove_civic = 2
			}
			change_government = {
				authority = auth_democratic
				remove_invalid_civics = yes
				civics = {
					civic = civic_citizen_service
					civic = civic_idealistic_foundation
				}
			}
		}
		set_policy = {
			policy = war_philosophy
			option = liberation_wars
			cooldown = yes
		}
		custom_tooltip = paragon.5210.d.tt
	}
	option = {
		name = paragon.5210.e
		trigger = {
			any_system_within_border = {
				is_capital_system = no
				any_system_colony = { has_modifier = paragon_origin_reformists }
			}
			has_valid_civic = civic_fanatic_purifiers
		}
		hidden_effect = {
			random_owned_leader = {
				remove_leader_flag = paragon_origin_legendary_leader
				limit = { is_ruler = yes }
				kill_leader = { show_notification = no }
			}
		}
		add_modifier = {
			modifier = paragon_origin_rebel_player
			days = -1
		}
		set_origin = origin_legendary_leader_death
		hidden_effect = {
			clear_ethos = yes
			paragon_origin_launch_rebelion = yes
			force_remove_civic = 3
			country_event = {
				id = paragon.5211 days = 15 random = 30
			}
		}
		country_add_ethic = ethic_fanatic_xenophobe
		country_add_ethic = ethic_fanatic_militarist
        country_add_ethic = ethic_egalitarian
		change_government = {
			authority = auth_democratic
			remove_invalid_civics = yes
			civics = {
				civic = civic_fanatic_purifiers
                civic = civic_sparta_spirit
				civic = civic_military_junta
			}
		}
		custom_tooltip = paragon.5210.d.tt
	}
}

#领袖招募判定
country_event = { # ethic leader lottery machine
    id = paragon.40001
    hide_window = yes
    is_triggered_only = yes
    trigger = {
    }

    immediate = { # Chosing leaders to put them into the lottery machine, based on ethics
        random_list = { # Putting leaders inside the lottery machine, and taking out those who are already hired
            0 = { # xenophile 1
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|xenophile|LEADER_ID|xenophile_leader_1|
                }
                ethic_leader_hire_event = { LEADER_ID = xenophile_leader_1 EVENT_ID = paragon.40100 }
            }
            0 = { # xenophile 2
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|xenophile|LEADER_ID|xenophile_leader_2|
                }
                ethic_leader_hire_event = { LEADER_ID = xenophile_leader_2 EVENT_ID = paragon.40200 }
            }
            0 = { # militarist 1
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|militarist|LEADER_ID|militarist_leader_1|
                }
                ethic_leader_hire_event = { LEADER_ID = militarist_leader_1 EVENT_ID = paragon.40300 }
            }
            0 = { # militarist 2
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|militarist|LEADER_ID|militarist_leader_2|
                }
                ethic_leader_hire_event = { LEADER_ID = militarist_leader_2 EVENT_ID = paragon.40400 }
            }
            0 = { # xenophobe 2
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|xenophobe|LEADER_ID|xenophobe_leader_2|
                }
                ethic_leader_hire_event = { LEADER_ID = xenophobe_leader_2 EVENT_ID = paragon.40600 }
            }
            0 = { # egalitarian 1
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|egalitarian|LEADER_ID|egalitarian_leader_1|
                }
                ethic_leader_hire_event = { LEADER_ID = egalitarian_leader_1 EVENT_ID = paragon.40700 }
            }
            0 = { # egalitarian 2
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|egalitarian|LEADER_ID|egalitarian_leader_2|
                }
                ethic_leader_hire_event = { LEADER_ID = egalitarian_leader_2 EVENT_ID = paragon.40800 }
            }
            0 = { # materialist 1
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|materialist|LEADER_ID|materialist_leader_1|
                }
                ethic_leader_hire_event = { LEADER_ID = materialist_leader_1 EVENT_ID = paragon.40900 }
            }
            0 = { # materialist 2
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|materialist|LEADER_ID|materialist_leader_2|
                }
                ethic_leader_hire_event = { LEADER_ID = materialist_leader_2 EVENT_ID = paragon.41000 }
            }
            0 = { # pacifist 1
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|pacifist|LEADER_ID|pacifist_leader_1|
                }
                ethic_leader_hire_event = { LEADER_ID = pacifist_leader_1 EVENT_ID = paragon.41100 }
            }
            0 = { # pacifist 2
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|pacifist|LEADER_ID|pacifist_leader_2|
                }
                ethic_leader_hire_event = { LEADER_ID = pacifist_leader_2 EVENT_ID = paragon.41200 }
            }
            0 = { # authoritarian 1
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|authoritarian|LEADER_ID|authoritarian_leader_1|
                }
                ethic_leader_hire_event = { LEADER_ID = authoritarian_leader_1 EVENT_ID = paragon.41300 }
            }
            0 = { # authoritarian 2
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|authoritarian|LEADER_ID|authoritarian_leader_2|
                }
                ethic_leader_hire_event = { LEADER_ID = authoritarian_leader_2 EVENT_ID = paragon.41400 }
            }
            0 = { # spiritualist 1
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|spiritualist|LEADER_ID|spiritualist_leader_1|
                }
                ethic_leader_hire_event = { LEADER_ID = spiritualist_leader_1 EVENT_ID = paragon.41500 }
            }
            0 = { # spiritualist 2
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|spiritualist|LEADER_ID|spiritualist_leader_2|
                }
                ethic_leader_hire_event = { LEADER_ID = spiritualist_leader_2 EVENT_ID = paragon.41600 }
            }
            0 = { # capitalism 1
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|capitalism|LEADER_ID|xenophobe_leader_1|
                }
                ethic_leader_hire_event = { LEADER_ID = xenophobe_leader_1 EVENT_ID = paragon.40500 }
            }
            0 = { # socialism 1
                modifier = {
                    add = value:ethic_leader_randomizer|ETHIC|socialism|LEADER_ID|socialism_leader_1|
                }
                ethic_leader_hire_event = { LEADER_ID = socialism_leader_1 EVENT_ID = ethic_paragon.51000 }
            }
        }
    }
}

country_event = { # xenophobe 1
    id = paragon.40500
    title = "paragon.40500.name"
    desc = "paragon.40500.desc"
    show_sound = par_portrait_04
    is_triggered_only = yes

    picture = GFX_leader_recruitment_bg_renowned
    auto_opens = no
    notification_event_icon = "GFX_message_leader_recruitment_shuladun"

    event_window_type = leader_recruit

    immediate = {
        ethic_leader_creator = {
            SPECIES_CLASS = random_non_machine
            LEADER_PORTRAIT = par_renown_04 #xenophobe_leader_gov
            CLASS = official
            NAME = NAME_xenophobe1
            LEVEL = 4
            GENDER = male
            IMMORTAL = no
            ETHIC = capitalism
            DESC = xenophobe1
            CATCH_PHRASE = xenophobe1_catch_phrase
        }
        last_created_leader = {
            add_trait = subclass_official_governor
            add_trait = leader_trait_galvanizer
            add_trait = leader_trait_polluter
            add_trait = leader_trait_forge_focus
            add_trait = leader_trait_distribution_lines
            set_age = 40
        }
    }

    picture_event_data = {
        portrait = event_target:ethic_leader
        room = ethic_spaceship_room
    }

    option = {
        name = DISMISS
        tag = dismiss_leader
        hidden_effect = {
            remove_global_flag = xenophobe_leader_1
            ethic_leader_kill_effect = yes
            set_country_flag = dismissed_xenophobe_leader_1
        }
    }
    option = {
        name = paragon.40500.a
        response_text = paragon.40500.a.response
        is_dialog_only = yes
    }
    option = {
        name = paragon.40500.b
        response_text = paragon.40500.b.response
        is_dialog_only = yes
    }
    option = {
        name = paragon.40500.c
        response_text = paragon.40500.c.response
        is_dialog_only = yes
    }
    option = {
        name = HIRE
        tag = hire_leader
        custom_tooltip = paragon.40500.hire_custom_tooltip
        hidden_effect = {
            ethic_leader_hire_effect = {
                GLOBAL_EVENT_TARGET = renowned_xenophobe1
            }
        }
    }
}



namespace = ethic_paragon

country_event = { # socialism 1
    id = ethic_paragon.51000
    title = "ethic_paragon.51000.name"
    desc = "ethic_paragon.51000.desc"
    show_sound = par_portrait_07
    is_triggered_only = yes

    picture = GFX_leader_recruitment_bg_renowned
    auto_opens = no
    event_window_type = leader_recruit
    notification_event_icon = "GFX_message_leader_recruitment_borin"

    immediate = {
        ethic_leader_creator = {
            SPECIES_CLASS = random_non_machine
            LEADER_PORTRAIT = ethic_par_01 #socialism_leader
            CLASS = official
            NAME = NAME_socialism1
            LEVEL = 4
            GENDER = male
            IMMORTAL = no
            ETHIC = socialism
            DESC = socialism1
            CATCH_PHRASE = socialism1_catch_phrase
        }
        last_created_leader = {
            add_trait = leader_trait_utopian_idealist
            add_trait = subclass_governor_economist
            add_trait = leader_trait_agrarian_upbringing_2
            add_trait = leader_trait_mining_focus
            add_trait = leader_trait_architectural_interest
            set_age = 40
        }
    }

    picture_event_data = {
        portrait = event_target:ethic_leader
        room = ethic_spaceship_room
    }

    option = {
        name = DISMISS
        tag = dismiss_leader
        hidden_effect = {
            remove_global_flag = socialism_leader_1
            ethic_leader_kill_effect = yes
            set_country_flag = dismissed_socialism_leader_1
        }
    }
    option = {
        name = ethic_paragon.51000.a
        response_text = ethic_paragon.51000.a.response
        is_dialog_only = yes
    }
    option = {
        name = ethic_paragon.51000.b
        response_text = ethic_paragon.51000.b.response
        is_dialog_only = yes
    }
    option = {
        name = ethic_paragon.51000.c
        response_text = ethic_paragon.51000.c.response
        is_dialog_only = yes
    }
    option = {
        name = HIRE
        tag = hire_leader
        custom_tooltip = ethic_paragon.51000.hire_custom_tooltip
        hidden_effect = {
            ethic_leader_hire_effect = {
                GLOBAL_EVENT_TARGET = renowned_socialism1
            }
        }
    }
}

country_event = { # socialism 2
    id = ethic_paragon.52000
    title = "ethic_paragon.52000.name"
    desc = "ethic_paragon.52000.desc"
    show_sound = par_portrait_07
    is_triggered_only = yes

    picture = GFX_leader_recruitment_bg_renowned
    auto_opens = no
    event_window_type = leader_recruit
    notification_event_icon = "GFX_message_leader_recruitment_borin"

    picture_event_data = {
        portrait = event_target:teacher
        room = ethic_spaceship_room
    }

    option = {
        name = ethic_paragon.52000.f
        tag = dismiss_leader
        custom_tooltip = ethic_paragon.52000.hire_custom_tooltip
    }
    option = {
        name = ethic_paragon.52000.a
        response_text = ethic_paragon.52000.a.response
        is_dialog_only = yes
    }
    option = {
        name = ethic_paragon.52000.b
        response_text = ethic_paragon.52000.b.response
        is_dialog_only = yes
    }
    option = {
        name = ethic_paragon.52000.c
        response_text = ethic_paragon.52000.c.response
        is_dialog_only = yes
    }
    option = {
        name = ethic_paragon.52000.d
        response_text = ethic_paragon.52000.d.response
        is_dialog_only = yes
    }
    option = {
        name = ethic_paragon.52000.e
        tag = hire_leader
        custom_tooltip = ethic_paragon.52000.e_custom_tooltip
        add_resource = {
            energy = -100
            influence = -20
        }
        hidden_effect = {
            event_target:primitive_civ = {
                shift_ethic = ethic_fanatic_socialism
            }
        }
    }
}


country_event = {
    id = ethic_paragon.41234
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        has_paragon_dlc = yes
    }

    immediate = {
        random_owned_leader = {
            limit = { has_leader_flag = renowned_leader }
            switch = {
                trigger = has_leader_flag
                renowned_socialism1 = { # Nasuz Demetor
                    random_list = {
                        10 = { leader_event = { id = ethic_paragon.51010 days = 1 random = 1800 } }
                        10 = { leader_event = { id = ethic_paragon.51020 days = 1 random = 1800 } }
                        80 = {}
                    }
                }
            }
        }
    }
}

# Shui Wa / socialism1
leader_event = {
    id = ethic_paragon.51010
    title = ethic_paragon.51010.name
    desc = ethic_paragon.51010.desc
    picture = GFX_evt_ship_in_orbit
    show_sound = event_default
    is_triggered_only = yes
    fire_only_once = yes

    event_window_type = leader_story
    event_picture_background = "GFX_leader_recruitment_bg_renowned"

    picture_event_data = {
        portrait = root
    }

    option = {
        name = ethic_paragon.51010.a
        owner = {
            if = {
                limit = {
                    has_utopia = yes
                    NOR = {
                        has_technology = tech_mega_engineering
                        is_researching_technology = tech_mega_engineering
                        has_tech_option = tech_mega_engineering
                    }
                }
                add_research_option = tech_mega_engineering
                add_tech_progress = {
                    tech = tech_mega_engineering
                    progress = 0.05
                }
            }
            else = {
                add_monthly_resource_mult = {
                    resource = engineering_research
                    value = @tier5researchreward
                    min = @tier5researchmin
                    max = @tier5researchmax
                }
            }
            hidden_effect = {
                create_species = {
                    name = "PRESCRIPTED_species_name_humans1"
                    plural = "PRESCRIPTED_species_plural_humans1"
                    adjective = "PRESCRIPTED_species_adjective_humans1"
                    class = HUM
                    portrait = human_legacy
                    gender = male
                    traits = {
                        ideal_planet_class = capital_scope
                        trait = "trait_adaptive"
                        trait = "trait_communal"
                        trait = "trait_deviants"
                    }
                }
                create_leader = {
                    species = last_created_species
                    name = "LUHAI_NAME"
                    custom_description = "LUHAI_DESC"
                    class = scientist
                    set_age = 52
                    skill = 4
                    randomize_traits = yes
                    background_ethic = ethic_materialist
                    effect = {
                        save_event_target_as = human_luhai
                    }
                }
                event_target:human_luhai = {
                    add_trait_no_notify = subclass_scientist_researcher
                    add_trait_no_notify = leader_trait_expertise_materials_2
                    add_trait_no_notify = leader_trait_experimenter
                    set_owner = prev
                }
                hire_event_leader_message = {
                    LEADER = human_luhai
                }
            }
        }
        custom_tooltip = ethic_paragon.51010.a.custom_tooltip
    }

    option = {
        name = ethic_paragon.51010.b
    }
}
leader_event = {
    id = ethic_paragon.51020
    title = ethic_paragon.51020.name
    desc = ethic_paragon.51020.desc
    picture = GFX_evt_ship_in_orbit
    show_sound = event_default
    is_triggered_only = yes
    fire_only_once = yes

    event_window_type = leader_story
    event_picture_background = "GFX_leader_recruitment_bg_renowned"

    picture_event_data = {
        portrait = root
    }

    option = {
        name = paragon.3160.f
        hidden_effect = {
            add_experience = 10000
        }
        custom_tooltip = ethic_paragon.51020.a.custom_tooltip
    }

    option = {
        name = paragon.3160.d
        hidden_effect = {
            hidden_effect = { unassign_leader = this }
            remove_all_traits = yes
            change_leader_class = scientist
            set_skill = 1
            add_experience = 54000
            add_trait = leader_trait_deep_space_explorer
            add_trait = subclass_scientist_explorer
        }
        custom_tooltip = ethic_paragon.51020.b.custom_tooltip
    }
}

namespace = ethic_royal_family

country_event = { # 国王继位
    id = ethic_royal_family.1
    title = "ethic_royal_family.1.title"
    desc = "ethic_royal_family.1.desc"
    is_triggered_only = yes

    trigger = {
        from = {
            is_councilor_type = councilor_king
        }
    }

    picture = GFX_evt_coronation

    immediate = {
        if = {
            limit = {
                any_owned_leader = {
                    has_trait = leader_trait_eci_heir
                }
            }
            random_owned_leader = {
                limit = {
                    has_trait = leader_trait_eci_heir
                }
                save_event_target_as = heirname
            }
        }
        else_if = {
            limit = {
                any_owned_leader = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                }
            }
            random_owned_leader = {
                limit = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                }
                save_event_target_as = heirname
            }
        }
        else = {
            generate_random_royalty = yes
            last_created_leader = {
                save_event_target_as = heirname
            }
        }
        event_target:heirname = {
            remove_trait = leader_trait_eci_royalty
            remove_trait = leader_trait_eci_heir
            add_trait_no_notify = leader_trait_eci_king
            set_council_position = councilor_king
        }
    }

    option = {
        name = ethic_royal_family.1.a
        custom_tooltip = ethic_royal_family.1.tooltip
    }
}

country_event = { # 挑选继承人
    id = ethic_royal_family.2
    title = "ethic_royal_family.2.title"
    desc = {
        text = "ethic_royal_family.2.desc"
        trigger = {
            any_owned_leader = {
                is_pool_leader = no
                is_ruler = no
                NOT = { has_leader_flag = generated }
                has_trait = leader_trait_eci_royalty
            }
        }
    }
    desc = {
        text = "ethic_royal_family.2.desc.noleader"
        trigger = {
            NOT = {
                any_owned_leader = {
                    is_pool_leader = no
                    is_ruler = no
                    NOT = { has_leader_flag = generated }
                    has_trait = leader_trait_eci_royalty
                }
            }
        }
    }
    is_triggered_only = yes

    picture = GFX_evt_throne_room

    immediate = {
        if = {
            limit = {
                any_owned_leader = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                }
            }
            random_owned_leader = {
                limit = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                }
                save_event_target_as = heir1
                set_leader_flag = heir1
            }
        }
        if = {
            limit = {
                any_owned_leader = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                    NOT = {
                        has_leader_flag = heir1
                    }
                }
            }
            random_owned_leader = {
                limit = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                    NOT = {
                        has_leader_flag = heir1
                    }
                }
                save_event_target_as = heir2
                set_leader_flag = heir2
            }
        }
        if = {
            limit = {
                any_owned_leader = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                    NOR = {
                        has_leader_flag = heir1
                        has_leader_flag = heir2
                    }
                }
            }
            random_owned_leader = {
                limit = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                    NOR = {
                        has_leader_flag = heir1
                        has_leader_flag = heir2
                    }
                }
                save_event_target_as = heir3
                set_leader_flag = heir3
            }
        }
        if = {
            limit = {
                any_owned_leader = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                    NOR = {
                        has_leader_flag = heir1
                        has_leader_flag = heir2
                        has_leader_flag = heir3
                    }
                }
            }
            random_owned_leader = {
                limit = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                    NOR = {
                        has_leader_flag = heir1
                        has_leader_flag = heir2
                        has_leader_flag = heir3
                    }
                }
                save_event_target_as = heir4
                set_leader_flag = heir4
            }
        }
        if = {
            limit = {
                NOT = {
                    exists = event_target:heir1
                }
            }
            generate_random_royalty = yes
            last_created_leader = {
                set_leader_flag = generated
                save_event_target_as = heir1
            }
        }
    }

    option = {
        trigger = {
            exists = event_target:heir1
        }
        name = ethic_royal_family.2.a
        if = {
            limit = {
                any_owned_leader = {
                    has_trait = leader_trait_eci_heir
                }
            }
            random_owned_leader = {
                limit = {
                    has_trait = leader_trait_eci_heir
                }
                remove_trait = leader_trait_eci_heir
                add_trait_no_notify = leader_trait_eci_royalty
            }
        }
        event_target:heir1 = {
            remove_trait = leader_trait_eci_royalty
            add_trait_no_notify = leader_trait_eci_heir
        }
    }
    option = {
        trigger = {
            exists = event_target:heir2
        }
        name = ethic_royal_family.2.b
        if = {
            limit = {
                any_owned_leader = {
                    has_trait = leader_trait_eci_heir
                }
            }
            random_owned_leader = {
                limit = {
                    has_trait = leader_trait_eci_heir
                }
                remove_trait = leader_trait_eci_heir
                add_trait_no_notify = leader_trait_eci_royalty
            }
        }
        event_target:heir2 = {
            remove_trait = leader_trait_eci_royalty
            add_trait_no_notify = leader_trait_eci_heir
        }
    }
    option = {
        trigger = {
            exists = event_target:heir3
        }
        name = ethic_royal_family.2.c
        if = {
            limit = {
                any_owned_leader = {
                    has_trait = leader_trait_eci_heir
                }
            }
            random_owned_leader = {
                limit = {
                    has_trait = leader_trait_eci_heir
                }
                remove_trait = leader_trait_eci_heir
                add_trait_no_notify = leader_trait_eci_royalty
            }
        }
        event_target:heir3 = {
            remove_trait = leader_trait_eci_royalty
            add_trait_no_notify = leader_trait_eci_heir
        }
    }
    option = {
        trigger = {
            exists = event_target:heir4
        }
        name = ethic_royal_family.2.d
        if = {
            limit = {
                any_owned_leader = {
                    has_trait = leader_trait_eci_heir
                }
            }
            random_owned_leader = {
                limit = {
                    has_trait = leader_trait_eci_heir
                }
                remove_trait = leader_trait_eci_heir
                add_trait_no_notify = leader_trait_eci_royalty
            }
        }
        event_target:heir4 = {
            remove_trait = leader_trait_eci_royalty
            add_trait_no_notify = leader_trait_eci_heir
        }
    }
    option = {
        trigger = {
            any_owned_leader = {
                has_trait = leader_trait_eci_heir
            }
        }
        name = ethic_royal_family.2.e
    }
    after = {
        every_owned_leader = {
            remove_leader_flag = heir1
            remove_leader_flag = heir2
            remove_leader_flag = heir3
            remove_leader_flag = heir4
            remove_leader_flag = generated
        }
    }
}

country_event = { # 挑选继承人
    id = ethic_royal_family.3
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        has_civic = civic_constitutional_monarchy
        NOT = {
            any_owned_leader = {
                has_trait = leader_trait_eci_heir
            }
        }
    }

    immediate = {
        country_event = { id = ethic_royal_family.2 }
    }
}

country_event = {
    id = ethic_royal_family.5
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        has_civic = civic_constitutional_monarchy
    }

    immediate = {
        from = {
            if = {
                limit = {
                    is_same_species = root.owner_main_species
                }
                random_list = {
                    4 = {}
                    1 = {
                        add_trait_no_notify = leader_trait_eci_royalty
                    }
                }
            }
        }
    }
}