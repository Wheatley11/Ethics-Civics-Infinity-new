namespace = utopia

# 义体革命
country_event = {
    id = utopia.2501
    title = "utopia.2501.name"
    desc = "utopia.2501.desc"
    picture = GFX_evt_cybernetics
    show_sound = event_the_flesh_is_weak

    is_triggered_only = yes

    immediate = {
        set_country_flag = cyborg_empire
        if = {
            limit = {
                any_owned_pop = {
                    is_exact_same_species = root
                }
            }
            random_owned_pop = {
                limit = { is_exact_same_species = root }
                create_cybernetic_species_mod = yes
                species = { save_event_target_as = new_main_species }
            }
        }
        else = {
            random_owned_pop = {
                limit = { is_same_species = root }
                create_cybernetic_species_mod = yes
                species = { save_event_target_as = new_main_species }
            }
        }
        change_dominant_species = { species = event_target:new_main_species }

        if = {
            limit = {
                is_hive_empire = no
            }
            while = {
                limit = {
                    any_owned_pop = {
                        is_sapient = yes
                        species = {
                            NOR = {
                                has_trait = trait_cybernetic
                                has_trait = trait_mechanical
                                has_trait = trait_machine_unit
                                has_trait = trait_hive_mind
                            }
                        }
                    }
                }
                random_owned_pop = {
                    limit = {
                        is_sapient = yes
                        species = {
                            NOR = {
                                has_trait = trait_cybernetic
                                has_trait = trait_mechanical
                                has_trait = trait_machine_unit
                                has_trait = trait_hive_mind
                            }
                        }
                    }
                    create_cybernetic_species_mod = yes
                }
            }
        }

        else_if = {
            limit = {
                is_hive_empire = yes
            }
            while = {
                limit = {
                    any_owned_pop = {
                        is_sapient = yes
                        species = {
                            has_trait = trait_hive_mind
                            NOR = {
                                has_trait = trait_cybernetic
                                has_trait = trait_mechanical
                                has_trait = trait_machine_unit
                            }
                        }
                    }
                }
                random_owned_pop = {
                    limit = {
                        is_sapient = yes
                        species = {
                            has_trait = trait_hive_mind
                            NOR = {
                                has_trait = trait_cybernetic
                                has_trait = trait_mechanical
                                has_trait = trait_machine_unit
                            }
                        }
                    }
                    create_cybernetic_species_mod = yes
                }
            }
        }

        while = {
            limit = {
                any_owned_leader = {
                    species = {
                        NOR = {
                            has_trait = trait_cybernetic
                            has_trait = trait_mechanical
                            has_trait = trait_machine_unit
                        }
                    }
                }
            }
            random_owned_leader = {
                limit = {
                    species = {
                        NOR = {
                            has_trait = trait_cybernetic
                            has_trait = trait_mechanical
                            has_trait = trait_machine_unit
                        }
                    }
                }
                root.capital_scope = { #workaround to prevent main species from accidentally flipping
                    create_pop = {
                        species = prev
                    }
                    last_created_pop = {
                        create_cybernetic_species_mod = yes
                        kill_pop = yes
                    }
                }
            }
        }

        while = {
            limit = {
                any_pool_leader = {
                    species = {
                        NOR = {
                            has_trait = trait_cybernetic
                            has_trait = trait_mechanical
                            has_trait = trait_machine_unit
                        }
                    }
                }
            }
            random_pool_leader = {
                limit = {
                    species = {
                        NOR = {
                            has_trait = trait_cybernetic
                            has_trait = trait_mechanical
                            has_trait = trait_machine_unit
                        }
                    }
                }
                root.capital_scope = { #workaround to prevent main species from accidentally flipping
                    create_pop = {
                        species = prev
                    }
                    last_created_pop = {
                        create_cybernetic_species_mod = yes
                        kill_pop = yes
                    }
                }
            }
        }

        while = {
            limit = {
                any_owned_army = {
                    exists = species
                    species = {
                        NOR = {
                            has_trait = trait_cybernetic
                            has_trait = trait_mechanical
                            has_trait = trait_machine_unit
                        }
                    }
                }
            }
            random_owned_army = {
                limit = {
                    exists = species
                    species = {
                        NOR = {
                            has_trait = trait_cybernetic
                            has_trait = trait_mechanical
                            has_trait = trait_machine_unit
                        }
                    }
                }
                root.capital_scope = { #workaround to prevent main species from accidentally flipping
                    create_pop = {
                        species = prev.species
                    }
                    last_created_pop = {
                        create_cybernetic_species_mod = yes
                        kill_pop = yes
                    }
                }
            }
        }

        every_controlled_ship = {
            limit = {
                is_ship_class = shipclass_colonizer
                species = {
                    NOR = {
                        has_trait = trait_cybernetic
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
            }
            root.capital_scope = { #workaround to prevent main species from accidentally flipping
                create_pop = {
                    species = prev
                }
                last_created_pop = {
                    create_cybernetic_species_mod = yes
                    kill_pop = yes
                }
            }
        }

        every_owned_leader = {
            limit = {
                species = { has_trait = trait_cybernetic }
                NOT = { has_trait = leader_trait_cyborg }
            }
            add_trait_no_notify = leader_trait_cyborg
        }

        create_message = {
            type = MESSAGE_ALL_GAINED_TRAIT
            localization = MESSAGE_ALL_GAINED_TRAIT_DESC
            days = @toast_message_days
            variable = {
                type = key
                value = leader_trait_cyborg
                localization = TRAIT
            }
            variable = {
                key = TRAIT_KEY
                value = leader_trait_cyborg
            }
            variable = {
                key = "border"
                value = "GFX_invisible" #TODO Common/ no rarity frame
            }
        }

        every_pool_leader = {
            limit = {
                species = { has_trait = trait_cybernetic }
                NOT = { has_trait = leader_trait_cyborg }
            }
            add_trait_no_notify = leader_trait_cyborg
        }

        observer_event = { id = observer.55 }
        every_country = {
            limit = {
                is_ai = no
                NOT = { is_same_value = root }
                has_communications = root
                root = {
                    is_primitive = no
                }
            }
            country_event = { id = utopia.2505 days = 5 }
        }
        if = {
            limit = {
                any_planet_within_border = {
                    has_planet_flag = fotd_seperatist_planet@root
                    owner = {
                        has_country_flag = fotd_seperatist_country@root
                    }
                }
            }
            country_event = { id = origin.6095 days = 5 random = 2 }
        }

        if = {
            limit = {
                is_gestalt = yes
            }
            every_owned_leader = {
                limit = {
                    is_councilor = yes
                    is_ruler = no
                }
                set_gestalt_node_protrait_effect = yes
            }
        }
    }

    option = {
        name = "utopia.2501.a"
    }
}

# 合成人时代
country_event = {
    id = utopia.2551
    title = "utopia.2551.name"
    desc = {
        trigger = { is_gestalt = no }
        text = "utopia.2551.desc"
    }
    desc = {
        trigger = { is_gestalt = yes }
        text = "utopia.2551G.desc"
    }
    picture = GFX_evt_robot_assembly_plant
    show_sound = event_synthetic_evolution

    is_triggered_only = yes

    immediate = {
        set_country_flag = synthetic_empire
        if = {
            limit = { has_civic = civic_network_of_the_mind }
            force_remove_civic = civic_network_of_the_mind
            force_add_civic = civic_network_of_the_mind_machine
        }
        if = {
            limit = {
                has_policy_flag = robots_outlawed
            }
            set_policy = {
                policy = robot_pop_policy
                option = robot_pops_allowed
                cooldown = yes
            }
        }
        if = {
            limit = {
                OR = {
                    has_policy_flag = ai_servitude
                    has_policy_flag = ai_outlawed
                }
            }
            set_policy = {
                policy = artificial_intelligence_policy
                option = ai_full_rights
                cooldown = yes
            }
        }
        if = {
            limit = {
                OR = {
                    is_active_resolution = "resolution_divinity_silence_the_soulless"
                    is_active_resolution = "resolution_divinity_a_defined_purpose"
                }
            }
            owner = {
                set_timed_country_flag = { flag = resolution_breached_synthetic_evolution days = 3600 }
            }
        }
        give_technology = { tech = tech_bio_reactor message = no }
        if = {
            limit = {
                NOT = { has_civic = civic_network_of_the_mind }
            }
            create_species = {
                is_mod = yes
                name = this
                namelist = this
                plural = this
                class = "ROBOT"
                homeworld = root.species
                portrait = "default_robot"
                traits = {
                    trait = "trait_mechanical"
                }

                effect = {
                    synethic_ascension_change_portrait = yes
                    save_event_target_as = new_robotic_species
                }
            }
        }
        if = {
            limit = {
                has_civic = civic_network_of_the_mind
            }
            create_species = {
                is_mod = yes
                name = this
                namelist = this
                plural = this
                class = "ROBOT"
                homeworld = root.species
                portrait = "default_robot"
                traits = {
                    trait = "trait_machine_unit"
                }

                effect = {
                    synethic_ascension_change_portrait = yes
                    save_event_target_as = new_robotic_species
                }
            }
        }
        every_owned_pop = {
            limit = {
                is_being_purged = no
                species = {
                    is_robotic = no
                    is_livestock = no
                }
            }
            change_species = event_target:new_robotic_species
        }

        every_controlled_ship = {
            limit = {
                is_ship_class = shipclass_colonizer
                species = {
                    is_robotic = no
                    is_livestock = no
                }
            }
            change_species = event_target:new_robotic_species
        }

        every_owned_army = {
            limit = {
                exists = species
                exists = planet
                species = {
                    is_robotic = no
                    is_livestock = no
                }
                army_type = assault_army
            }
            modify_army = {
                name = random
                type = "robotic_army"
                species = event_target:new_robotic_species
            }
        }

        every_owned_army = {
            limit = {
                exists = species
                exists = planet
                species = {
                    is_robotic = no
                    is_livestock = no
                }
                army_type = defense_army
            }
            modify_army = {
                name = random
                type = "robotic_defense_army"
                species = event_target:new_robotic_species
            }
        }

        every_owned_leader = {
            limit = {
                is_event_leader = no
                OR = {
                    species = {
                        is_robotic = no
                        is_livestock = no
                    }
                    has_trait = leader_trait_synthetic
                }
            }
            change_species = event_target:new_robotic_species
            change_leader_portrait = species
        }
        every_pool_leader = {
            limit = {
                OR = {
                    species = {
                        is_robotic = no
                        is_livestock = no
                    }
                    has_trait = leader_trait_synthetic
                }
            }
            change_species = event_target:new_robotic_species
            change_leader_portrait = species
        }
        change_dominant_species = { species = event_target:new_robotic_species }

        every_owned_leader = {
            limit = {
                species = { has_trait = trait_mechanical }
                NOR = {
                    has_trait = leader_trait_synthetic
                    has_leader_flag = renowned_leader
                    has_leader_flag = legendary_leader
                }
            }
            add_trait_no_notify = leader_trait_synthetic
            remove_trait = leader_trait_cyborg
        }

        create_message = {
            type = MESSAGE_ALL_GAINED_TRAIT
            localization = MESSAGE_ALL_GAINED_TRAIT_DESC
            days = @toast_message_days
            variable = {
                type = key
                value = leader_trait_synthetic
                localization = TRAIT
            }
            variable = {
                key = TRAIT_KEY
                value = leader_trait_synthetic
            }
            variable = {
                key = "border"
                value = "GFX_invisible" #TODO Common/ no rarity frame
            }
        }

        every_envoy = {
            limit = {
                species = {
                    is_robotic = no
                    is_livestock = no
                }
            }
            change_species = event_target:new_robotic_species
            change_leader_portrait = species
        }
        every_pool_leader = {
            limit = {
                species = { has_trait = trait_mechanical }
                NOT = { has_trait = leader_trait_synthetic }
            }
            add_trait_no_notify = leader_trait_synthetic
            remove_trait = leader_trait_cyborg
        }

        observer_event = { id = observer.4 }
        every_country = {
            limit = {
                is_ai = no
                NOT = { is_same_value = root }
                has_communications = root
            }
            country_event = { id = utopia.2555 days = 5 }
            country_event = { id = utopia.2556 days = 10 }
        }
        if = {
            limit = {
                any_country = {
                    OR = {
                        is_country_type = fallen_empire
                        is_country_type = awakened_fallen_empire
                    }
                    has_ethic = ethic_fanatic_spiritualist
                    has_communications = root
                    NOT = { is_same_value = root }
                }
            }
            random_country = {
                limit = {
                    OR = {
                        is_country_type = fallen_empire
                        is_country_type = awakened_fallen_empire
                    }
                    has_ethic = ethic_fanatic_spiritualist
                    has_communications = root
                    NOT = { is_same_value = root }
                }
                country_event = { id = utopia.2557 days = 15 }
            }
        }
        else = {
            random_country = {
                limit = {
                    is_country_type = default
                    has_ethic = ethic_fanatic_spiritualist
                    has_communications = root
                    NOT = { is_same_value = root }
                }
                country_event = { id = utopia.2557 days = 15 }
            }
        }

        ROOT = {
            set_country_flag = synth_assimilation
        }
        if = {
            limit = {
                any_planet_within_border = {
                    has_planet_flag = fotd_seperatist_planet@root
                    owner = {
                        has_country_flag = fotd_seperatist_country@root
                    }
                }
            }
            country_event = { id = origin.6100 days = 5 random = 2 }
        }
    }

    option = {
        trigger = {
            is_homicidal = no
        }
        name = "utopia.2551.a"
        custom_tooltip = SYNTH_ASSIMILATION_CITIZENSHIP_ENABLED
    }

    option = {
        trigger = {
            is_homicidal = yes
        }
        name = "utopia.2551.a"
    }
}

# 掌控演化
country_event = {
    id = utopia.2703
    title = "utopia.2703.name"
    desc = "utopia.2703.desc"
    picture = GFX_evt_genetic_modification
    show_sound = event_evolution_mastery

    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                any_planet_within_border = {
                    has_planet_flag = fotd_seperatist_planet@root
                    owner = {
                        has_country_flag = fotd_seperatist_country@root
                    }
                }
            }
            country_event = { id = origin.6120 days = 5 random = 2 }
        }
        set_country_flag = ap_genetics_finish
    }

    option = {
        name = EXCELLENT
        TRIGGER = {
            OR = {
                NOT = { has_authority = auth_hive_mind }
                has_valid_civic = civic_hive_devouring_swarm
            }
        }
    }

    option = {
        name = EXCELLENT
        trigger = {
            has_authority = auth_hive_mind
            NOT = { has_valid_civic = civic_hive_devouring_swarm }
        }
    }
}

# 大觉醒
country_event = {
    id = utopia.2650
    title = "utopia.2650.name"
    desc = utopia.2650.desc
    picture = GFX_evt_psionics
    show_sound = event_the_great_awakening

    is_triggered_only = yes

    trigger = {
        has_tradition = tr_psionics_psionic_assimilation
    }

    immediate = {
        every_owned_pop = {
            limit = {
                is_same_species = root
                has_trait = trait_latent_psionic
            }
            modify_species = {
                species = this
                remove_trait = trait_latent_psionic
                add_trait = trait_psionic
                effect = {
                    save_event_target_as = psionic_species
                }
            }
        }
        change_dominant_species = { species = event_target:psionic_species change_all = yes }
    }
    option = {
        name = "utopia.2650.a"
        trigger = {
            NOT = {
                has_valid_civic = civic_network_of_the_mind
            }
        }
        hidden_effect = {
            every_country = {
                limit = {
                    OR = {
                        is_country_type = default
                        is_country_type = fallen_empire
                        is_country_type = awakened_fallen_empire
                    }
                }
                every_owned_leader = {
                    limit = {
                        species = {
                            has_trait = trait_psionic
                            is_same_value = event_target:psionic_species
                        }
                        NOT = { has_trait = leader_trait_psionic }
                    }
                    add_trait_no_notify = leader_trait_psionic
                    owner = {
                        if = {
                            limit = {
                                NOT = {
                                    has_country_flag = psionic_leader_toast
                                }
                            }
                            set_timed_country_flag = {
                                flag = psionic_leader_toast
                                days = 30
                            }
                        }
                    }
                }

                every_pool_leader = {
                    limit = {
                        species = {
                            has_trait = trait_psionic
                            is_same_value = event_target:psionic_species
                        }
                        NOT = { has_trait = leader_trait_psionic }
                    }
                    add_trait_no_notify = leader_trait_psionic
                    owner = {
                        if = {
                            limit = {
                                NOT = {
                                    has_country_flag = psionic_leader_toast
                                }
                            }
                            set_timed_country_flag = {
                                flag = psionic_leader_toast
                                days = 30
                            }
                        }
                    }
                }

                if = {
                    limit = {
                        has_country_flag = psionic_leader_toast
                    }
                    create_message = {
                        type = MESSAGE_ALL_GAINED_TRAIT
                        localization = MESSAGE_ALL_GAINED_TRAIT_DESC
                        days = @toast_message_days
                        variable = {
                            type = key
                            value = leader_trait_psionic
                            localization = TRAIT
                        }
                        variable = {
                            key = TRAIT_KEY
                            value = leader_trait_psionic
                        }
                        variable = {
                            key = "border"
                            value = "GFX_invisible" #TODO Common/ no rarity frame
                        }
                    }
                }
            }
            observer_event = { id = observer.6 }
            every_country = {
                limit = {
                    is_ai = no
                    has_communications = root
                    NOT = { is_same_value = root }
                }
                country_event = { id = utopia.2652 }
            }
        }
    }
}

# 天选帝皇
country_event = {
    id = utopia.3400
    title = "utopia.3400.name"
    desc = "utopia.3400.desc"
    picture = GFX_evt_psionics
    show_sound = event_mystic_reveal

    trigger = {
        is_country_type = default
        NOT = { has_country_flag = chosen_one_ruler_event }
        OR = {
            # Either you've not Imperial and have a Chosen One
            AND = {
                OR = {
                    is_direct_democratic_authority = yes
                    has_authority = auth_democratic
                    has_authority = auth_oligarchic
                    has_authority = auth_dictatorial
                    # MegaCorps deliberately excluded.
                }
                any_owned_leader = {
                    has_chosen_one_leader_trait = yes
                }
            }
            # Or you're Imperial and the Chosen One is your current ruler or heir.
            AND = {
                has_authority = auth_imperial
                any_owned_leader = {
                    has_chosen_one_leader_trait = yes
                    has_trait = trait_imperial_heir
                }
            }
        }
    }

    mean_time_to_happen = {
        months = 120
    }

    immediate = {
        set_country_flag = chosen_one_ruler_event
        set_country_flag = psionics_country
        if = {
            limit = {
                OR = {
                    is_direct_democratic_authority = yes
                    has_authority = auth_democratic
                    has_authority = auth_oligarchic
                    has_authority = auth_dictatorial
                    # MegaCorps deliberately excluded.
                }
            }
            random_owned_leader = {
                limit = {
                    has_chosen_one_leader_trait = yes
                }
                save_event_target_as = chosen_one
                species = { save_event_target_as = chosen_one_species }
            }
        }
        else = {
            random_owned_leader = {
                limit = {
                    has_chosen_one_leader_trait = yes
                    has_trait = trait_imperial_heir
                }
                save_event_target_as = chosen_one
                species = { save_event_target_as = chosen_one_species }
            }
        }
    }

    option = {
        name = "utopia.3400.a"
        trigger = { is_dictatorial_authority = no }
        ai_chance = {
            factor = 100
            modifier = {
                factor = 40
                has_ethic = ethic_egalitarian
            }
            modifier = {
                factor = 80
                has_ethic = ethic_fanatic_egalitarian
            }
            modifier = {
                factor = 80
                OR = {
                    has_valid_civic = civic_anarchism
                    has_valid_civic = civic_coalition_government
                    has_valid_civic = civic_shared_burden
                    has_valid_civic = civic_socialistic
                    has_valid_civic = civic_beacon_of_liberty
                    has_valid_civic = civic_citizen_service
                    has_valid_civic = civic_peaceful_republic
                    has_valid_civic = civic_executive_committee
                    has_valid_civic = civic_spiritual_democracy
                    has_valid_civic = civic_cyber_demos_cratos
                    has_valid_civic = civic_technocracy
                    has_valid_civic = civic_cyber_dictatorship
                    has_valid_civic = civic_barbaric_despoilers
                    has_valid_civic = civic_worker_coop
                    has_valid_civic = civic_soviet
                }
            }
        }
        custom_tooltip = reject_god_emperor
    }

    option = {
        name = "utopia.3400.b"
        trigger = { has_authority = auth_dictatorial }
        ai_chance = {
            factor = 100
            modifier = {
                factor = 40
                has_ethic = ethic_egalitarian
            }
            modifier = {
                factor = 80
                has_ethic = ethic_fanatic_egalitarian
            }
            modifier = {
                factor = 80
                OR = {
                    has_valid_civic = civic_anarchism
                    has_valid_civic = civic_coalition_government
                    has_valid_civic = civic_shared_burden
                    has_valid_civic = civic_socialistic
                    has_valid_civic = civic_beacon_of_liberty
                    has_valid_civic = civic_citizen_service
                    has_valid_civic = civic_peaceful_republic
                    has_valid_civic = civic_executive_committee
                    has_valid_civic = civic_spiritual_democracy
                    has_valid_civic = civic_cyber_demos_cratos
                    has_valid_civic = civic_technocracy
                    has_valid_civic = civic_cyber_dictatorship
                    has_valid_civic = civic_barbaric_despoilers
                    has_valid_civic = civic_worker_coop
                    has_valid_civic = civic_soviet
                }
            }
        }
        custom_tooltip = reject_god_emperor
    }
    option = {
        name = "utopia.3400.b"
        trigger = { is_dictatorial_authority = no }
        ai_chance = {
            factor = 100
            modifier = {
                factor = 40
                has_ethic = ethic_authoritarian
            }
            modifier = {
                factor = 80
                has_ethic = ethic_fanatic_authoritarian
            }
            modifier = {
                factor = 80
                OR = {
                    has_valid_civic = civic_feudal_realm
                    has_valid_civic = civic_aristocratic_elite
                    has_valid_civic = civic_coalition_government
                    has_valid_civic = civic_socialistic
                    has_valid_civic = civic_labor_aristocracy
                    has_valid_civic = civic_ultimate_collective
                    has_valid_civic = civic_merchant_guilds
                    has_valid_civic = civic_citizen_service
                    has_valid_civic = civic_philosopher_king
                    has_valid_civic = civic_exalted_priesthood
                    has_valid_civic = civic_imperial_cult
                    has_valid_civic = civic_glorious_pioneer
                    has_valid_civic = civic_military_dictatorship
                    has_valid_civic = civic_family_business
                    has_valid_civic = civic_home_country_isomorphism
                    has_valid_civic = civic_colonial_government
                }
            }
        }
        if = {
            limit = {
                has_origin = origin_legendary_leader_dictatorial
            }
            set_origin = origin_legendary_leader_imperial
        }
        shift_ethic = "ethic_fanatic_authoritarian"
        shift_ethic = "ethic_spiritualist"
        change_government = {
            authority = auth_imperial
            cooldown = no
            remove_invalid_civics = yes
        }
        force_add_civic = civic_psionic_sovereign
        set_government_cooldown = no
        # The ruler doesn't need to abdicate if they're being crowned.
        if = {
            limit = {
                ruler = {
                    NOT = {
                        is_same_value = event_target:chosen_one
                    }
                }
            }
            ruler = {
                exile_leader_as = destituted_ruler_chosen_one
            }
            set_leader = event_target:chosen_one
        }
        hidden_effect = {
            every_country = {
                limit = {
                    is_ai = no
                    NOT = { is_same_value = root }
                    has_communications = root
                }
                country_event = { id = utopia.3401 days = 4 }
            }
            country_event = { id = utopia.3402 days = 5 }
        }
    }
}