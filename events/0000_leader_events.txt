############################
#
# Leader Events
#
############################

namespace = leader

# Fired by on_added_to_leader_pool
# A leader is added to the leader pool, available for recruitment
# scope: country, from: leader
# Add traits from civics
country_event = {
	id = leader.100
	hide_window = yes

	is_triggered_only = yes


	trigger = {
		NOT = { has_country_flag = spawning_renowned_leader }
	}

	immediate = {
		# Aristocratic Elite
		# 20% Chance for a random positive trait and a random negative trait
		if = {
			limit = {
				OR = {
					has_valid_civic = civic_aristocratic_elite
					has_valid_civic = civic_feudal_realm
					has_valid_civic = civic_peaceful_republic
					has_valid_civic = civic_socialistic
				}
			}
			from = {
				random_list = {
					80 = {  }
					20 = {
						add_trait_no_notify = "random_common"
						add_trait_no_notify = "random_negative"
						# Variable "leader_pending_negative_traits_unmodified" doesn't exist yet, can't reduce it yet. Check made in paragon_2.2200.
						if = {
							limit = {
								owner = {
									OR = {
										has_valid_civic = civic_aristocratic_elite
										has_valid_civic = civic_feudal_realm
									}
								}
							}
							change_background_job = noble
						}
						else_if = {
							limit = {
								owner = {
									has_valid_civic = civic_peaceful_republic
								}
							}
							change_background_job = supervisor
						}
					}
				}
			}
		}

		# 哲人王
		# 领袖有25%的概率随机获得正面特质
		if = {
			limit = {
				OR = {
					has_civic = civic_executive_committee
					has_valid_civic = civic_socialistic
				}
			}
			from = {
				random_list = {
					75 = {  }
					25 = {
						add_trait_no_notify = "random_common"
						# Variable "leader_pending_negative_traits_unmodified" doesn't exist yet, can't reduce it yet. Check made in paragon_2.2200.
						if = {
							limit = {
								owner = {
									has_valid_civic = civic_executive_committee
								}
							}
							change_background_job = teacher
						}
					}
				}
			}
		}

		# 血源诅咒
		# 领袖有25%的概率随机获得正面特质
		if = {
			limit = {
				has_valid_civic = civic_curse_of_blood_kin
			}
			from = {
				random_list = {
					5 = { add_trait_no_notify = leader_trait_stubborn }
					5 = { add_trait_no_notify = leader_trait_substance_abuser }
					5 = { add_trait_no_notify = leader_trait_arrested_development }
					5 = { add_trait_no_notify = leader_trait_nervous }
					5 = { add_trait_no_notify = leader_trait_lethargic }
					5 = { add_trait_no_notify = leader_trait_passive }
					5 = { add_trait_no_notify = leader_trait_tyrannical }
					5 = { add_trait_no_notify = leader_trait_paranoid }
					5 = { add_trait_no_notify = leader_trait_melancholic }
					5 = { add_trait_no_notify = leader_trait_fallible }
					5 = { add_trait_no_notify = leader_trait_lavish_lifestyle }
					5 = { add_trait_no_notify = leader_trait_excessive }
					5 = { add_trait_no_notify = leader_trait_reclusive }
					5 = { add_trait_no_notify = leader_trait_intolerant }
					5 = { add_trait_no_notify = leader_trait_volatile }

					3 = { add_trait_no_notify = leader_trait_adaptable }
					3 = { add_trait_no_notify = leader_trait_eager }
					3 = { add_trait_no_notify = leader_trait_cautious }
					3 = { add_trait_no_notify = leader_trait_unyielding }
					3 = { add_trait_no_notify = leader_trait_restrained }
					3 = { add_trait_no_notify = leader_trait_meticulous }
					3 = { add_trait_no_notify = leader_trait_carefree }
					3 = { add_trait_no_notify = leader_trait_maniacal }
					3 = { add_trait_no_notify = trait_ruler_charismatic }
					3 = { add_trait_no_notify = leader_trait_inquisitive }
				}
			}
		}

		# Technocracy
		# Adds a random expertise trait
		if = {
			limit = {
				OR = {
					has_valid_civic = civic_technocracy
				}
				from = { leader_class = scientist }
			}
			from = {
				add_random_expertise_trait_effect = yes
			}
		}

		# Crusader Spirit
		# Adds the Crusader trait
		if = {
			limit = {
				has_valid_civic = civic_crusader_spirit
				from = { leader_class = commander }
			}
			from = {
				add_trait_no_notify = leader_trait_crusader
			}
		}

		# Letters of Marque
		# Adds the Corsair trait
		if = {
			limit = {
				has_civic = civic_crusader_spirit_corporate
				from = { leader_class = commander }
			}
			from = {
				add_trait_no_notify = leader_trait_corsair
			}
		}
	}
}

# Fired by on_game_start_country
# scope: country
# Add traits from civics
country_event = {
	id = leader.110
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		# Aristocratic Elite
		# 20% Chance for a random positive trait and a random negative trait
		if = {
			limit = {
				OR = {
					has_valid_civic = civic_aristocratic_elite
					has_valid_civic = civic_feudal_realm
					has_valid_civic = civic_peaceful_republic
					has_valid_civic = civic_socialistic
				}
			}
			every_owned_leader = {
				random_list = {
					80 = {  }
					20 = {
						add_trait_no_notify = "random_common"
						add_trait_no_notify = "random_negative"
						# Variable "leader_pending_negative_traits_unmodified" doesn't exist yet, can't reduce it yet. Check made in paragon_2.2200.
						if = {
							limit = {
								owner = {
									OR = {
										has_valid_civic = civic_aristocratic_elite
										has_valid_civic = civic_feudal_realm
									}
								}
							}
							change_background_job = noble
						}
						else_if = {
							limit = {
								owner = {
									has_valid_civic = civic_peaceful_republic
								}
							}
							change_background_job = supervisor
						}
					}
				}
			}
		}

		# Remnants
		# Adds a Archaeostudies Expertise trait
		if = {
			limit = {
				has_ancrel = yes
				has_origin = origin_remnants
			}
			every_owned_leader = {
				limit = {
					leader_class = scientist
					OR = {
						is_councilor_type = councilor_research
						is_councilor_type = councilor_gestalt_cognitive
					}
				}
				add_trait_no_notify = leader_trait_expertise_archaeostudies
			}
		}


		# Technocracy
		# Adds a random Expertise trait
		if = {
			limit = {
				OR = {
					has_valid_civic = civic_technocracy
				}
			}
			every_owned_leader = {
				limit = {
					leader_class = scientist
				}
				add_random_expertise_trait_effect = yes
			}
		}

		# Crusader Spirit
		# Adds the Crusader trait
		if = {
			limit = {
				has_valid_civic = civic_crusader_spirit
			}
			every_owned_leader = {
				limit = {
					leader_class = commander
				}
				add_trait_no_notify = leader_trait_crusader
			}
		}

		# Letters of Marque
		# Adds the Corsair trait
		if = {
			limit = { has_civic = civic_crusader_spirit_corporate }
			every_owned_leader = {
				limit = {
					leader_class = commander
				}
				add_trait_no_notify = leader_trait_corsair
			}
		}
	}
}

# New heir appointed
leader_event = {
	id = leader.200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = owner
	}

	immediate = {
		add_age = 16

		####################
		# CLASS RANDOMISER #
		####################

		# Set skill level to 1
		set_skill = 1
		# Add generic level modifiers
		add_skill_without_trait_selection = owner.modifier:leader_initial_skill

		if = {
			limit = {
				owner = {
					OR = {
						# Commander
						has_valid_civic = civic_crusader_spirit_corporate
						has_tradition = tr_supremacy_war_games
						has_valid_civic = civic_distinguished_admiralty
						has_valid_civic = civic_crusader_spirit
						# Official
						has_valid_civic = civic_aristocratic_elite
						has_tradition = tr_domination_colonial_viceroys
						# Scientist
						has_valid_civic = civic_technocracy
						has_tradition = tr_discovery_science_division
						# Current Ruler's Class
						has_valid_civic = civic_philosopher_king
					}
				}
			}

			# All classes have a base weight of 10.
			# Civics that boost only one class add 40.
			# Civics that boost two classes add 20 to each class.
			# Traditions that boost a class add 20.

			random_list = {
				# Commander
				0 = {
					modifier = {
						add = value:heir_class_weight_commander
					}
					change_leader_class = commander
					add_skill_without_trait_selection = owner.modifier:commander_initial_skill
				}
				# Official
				0 = {
					modifier = {
						add = value:heir_class_weight_official
					}
					change_leader_class = official
					add_skill_without_trait_selection = owner.modifier:official_initial_skill
				}
				# Scientist
				0 = {
					modifier = {
						add = value:heir_class_weight_scientist
					}
					change_leader_class = scientist
					add_skill_without_trait_selection = owner.modifier:scientist_initial_skill
				}
			}
		}

		##########
		# TRAITS #
		##########

		# Initial Traits, set after determining class.
		add_trait_no_notify = trait_imperial_heir
		add_trait_no_notify = "random_common"

		# Chance for a negative trait.
		random_list = {
			95 = { }
			5 = {
				add_trait_no_notify = "random_common"
				add_trait_no_notify = "random_negative"
				# Variable "leader_pending_negative_traits_unmodified" doesn't exist yet, can't reduce it yet. Checked now made in paragon_2.2200.
				modifier = {
					factor = 0
					owner = { has_valid_civic = civic_philosopher_king }
				}
				modifier = {
					factor = 0
					owner = { has_valid_civic = civic_executive_committee }
				}
			}
		}

		# Under One Rule
		if = {
			limit = {
				owner = {
					OR = {
						has_origin = origin_legendary_leader_imperial
						has_valid_civic = civic_imperial_cult
						ruler = { has_trait = leader_trait_legendary_offspring }
					}
				}
			}
			add_trait_no_notify = leader_trait_legendary_offspring
		}

		# Technocracy
		if = {
			limit = {
				owner = {
					OR = {
						has_valid_civic = civic_technocracy
					}
				}
				leader_class = scientist
			}
			add_random_expertise_trait_effect = yes
		}

		# Crusader Spirit
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_crusader_spirit
				}
				leader_class = commander
			}
			add_trait_no_notify = leader_trait_crusader
		}

		# Letters of Marque
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_crusader_spirit_corporate
				}
				leader_class = commander
			}
			add_trait_no_notify = leader_trait_corsair
		}
	}
}