mobilize_planet = {
    #拥国之军
    if = {
        limit = {
            owner = {
                has_policy_flag = sparta_system
            }
        }
        while = {
            count = value:num_mobilization_no_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    is_pop_category = civilian
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = citizen_warrior
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        is_pop_category = ruler
                        is_pop_category = specialist
                    }
                }
                planet = {
                    if = {
                        limit = {
                            owner = {
                                is_individual_machine = yes
                                has_tradition = tr_nanotech_finish
                            }
                        }
                        create_army = {
                            type = robotic_conscript_army_nanotech
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else_if = {
                        limit = {
                            owner = {
                                has_country_flag = synth_virtual
                            }
                        }
                        create_army = {
                            type = robotic_conscript_army_virtuality
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else_if = {
                        limit = {
                            owner = {
                                OR = {
                                    has_technology = tech_synthetic_workers
                                    AND = {
                                        is_individual_machine = yes
                                        has_tradition = tr_modularity_finish
                                    }
                                }
                            }
                        }
                        create_army = {
                            type = robotic_conscript_army_3
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else_if = {
                        limit = {
                            owner = {
                                OR = {
                                    has_technology = tech_droid_workers
                                    is_individual_machine = yes
                                }
                            }
                        }
                        create_army = {
                            type = robotic_conscript_army_2
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else = {
                        create_army = {
                            type = robotic_conscript_army
                            species = prev.species
                            owner = root.owner
                        }
                    }
                }
            }
        }
    }
    #钢铁骑士
    else_if = {
        limit = {
            owner = {
                has_policy_flag = military_euphony
                OR = {
                    has_tradition = tr_synthetics_finish
                    is_individual_machine = yes
                }
            }
        }
        while = {
            count = value:num_mobilization_knight
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        is_pop_category = ruler
                        is_pop_category = specialist
                    }
                }
                planet = {
                    create_army = {
                        type = steel_knight_warband
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_squire
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        is_pop_category = ruler
                        is_pop_category = specialist
                    }
                }
                planet = {
                    create_army = {
                        type = steel_squire_warband
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_thrall
            weighted_random_owned_pop_group = {
                limit = {
                    is_enslaved = yes
                    has_slavery_type = { type = slavery_military }
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = slave_guard
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_no_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = peasant_draftees
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    OR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = machine_draftees
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
    }
    #赛博骑士
    else_if = {
        limit = {
            owner = {
                has_policy_flag = military_euphony
                has_tradition = tr_cybernetics_finish
            }
        }
        while = {
            count = value:num_mobilization_knight
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        is_pop_category = ruler
                        is_pop_category = specialist
                    }
                }
                planet = {
                    create_army = {
                        type = cyber_knight_warband
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_squire
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        is_pop_category = ruler
                        is_pop_category = specialist
                    }
                }
                planet = {
                    create_army = {
                        type = cyber_squire_warband
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_thrall
            weighted_random_owned_pop_group = {
                limit = {
                    is_enslaved = yes
                    has_slavery_type = { type = slavery_military }
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = slave_guard
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_no_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = peasant_draftees
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    OR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = machine_draftees
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
    }
    #基因骑士
    else_if = {
        limit = {
            owner = {
                has_policy_flag = military_euphony
                OR = {
                    has_tradition = tr_purity_finish
                    has_tradition = tr_mutation_finish
                    has_tradition = tr_cloning_finish
                }
            }
        }
        while = {
            count = value:num_mobilization_knight
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        is_pop_category = ruler
                        is_pop_category = specialist
                    }
                }
                planet = {
                    create_army = {
                        type = gene_knight_warband
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_squire
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        is_pop_category = ruler
                        is_pop_category = specialist
                    }
                }
                planet = {
                    create_army = {
                        type = gene_squire_warband
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_thrall
            weighted_random_owned_pop_group = {
                limit = {
                    is_enslaved = yes
                    has_slavery_type = { type = slavery_military }
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = slave_guard
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_no_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = peasant_draftees
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    OR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = machine_draftees
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
    }
    #魔法骑士
    else_if = {
        limit = {
            owner = {
                has_policy_flag = military_euphony
                OR = {
                    has_tradition = tr_psionics_finish
                    has_origin = origin_wizarding_world
                }
            }
        }
        while = {
            count = value:num_mobilization_knight
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        is_pop_category = ruler
                        is_pop_category = specialist
                    }
                }
                planet = {
                    create_army = {
                        type = magic_knight_warband
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_squire
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        is_pop_category = ruler
                        is_pop_category = specialist
                    }
                }
                planet = {
                    create_army = {
                        type = magic_squire_warband
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_thrall
            weighted_random_owned_pop_group = {
                limit = {
                    is_enslaved = yes
                    has_slavery_type = { type = slavery_military }
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = slave_guard
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_no_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = peasant_draftees
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    OR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = machine_draftees
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
    }
    #无飞升骑士
    else_if = {
        limit = {
            owner = {
                has_policy_flag = military_euphony
            }
        }
        while = {
            count = value:num_mobilization_knight
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        is_pop_category = ruler
                        is_pop_category = specialist
                    }
                }
                planet = {
                    create_army = {
                        type = knight_warband
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_squire
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        is_pop_category = ruler
                        is_pop_category = specialist
                    }
                }
                planet = {
                    create_army = {
                        type = squire_warband
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_no_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = peasant_draftees
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    OR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = machine_draftees
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
    }
    #民兵
    else_if = {
        limit = {
            owner = {
                has_policy_flag = militia_association
            }
        }
        while = {
            count = value:num_mobilization_civilian
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    is_pop_category = civilian
                    is_enslaved = no
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                        has_trait = trait_latent_psionic
                        has_trait = trait_psionic
                    }
                }
                planet = {
                    if = {
                        limit = {
                            owner = {
                                has_tradition = tr_purity_finish
                            }
                        }
                        create_army = {
                            type = purity_militia_army
                            species = prev.species
                            owner = root.owner

                        }
                    }
                    else_if = {
                        limit = {
                            owner = {
                                has_tradition = tr_mutation_finish
                            }
                        }
                        create_army = {
                            type = mutant_militia_army
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else_if = {
                        limit = {
                            owner = {
                                has_tradition = tr_cloning_finish
                            }
                        }
                        create_army = {
                            type = militia_army
                            species = prev.species
                            owner = root.owner
                        }
                        create_army = {
                            type = clone_militia_army
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else = {
                        create_army = {
                            type = militia_army
                            species = prev.species
                            owner = root.owner
                        }
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_psionic
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    is_pop_category = civilian
                    is_enslaved = no
                    OR = {
                        has_trait = trait_latent_psionic
                        has_trait = trait_psionic
                    }
                }
                planet = {
                    create_army = {
                        type = psionic_militia_army
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        is_pop_category = ruler
                        is_pop_category = specialist
                    }
                }
                planet = {
                    if = {
                        limit = {
                            owner = {
                                is_individual_machine = yes
                                has_tradition = tr_nanotech_finish
                            }
                        }
                        create_army = {
                            type = robotic_conscript_army_nanotech
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else_if = {
                        limit = {
                            owner = {
                                has_country_flag = synth_virtual
                            }
                        }
                        create_army = {
                            type = robotic_conscript_army_virtuality
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else_if = {
                        limit = {
                            owner = {
                                OR = {
                                    has_technology = tech_synthetic_workers
                                    AND = {
                                        is_individual_machine = yes
                                        has_tradition = tr_modularity_finish
                                    }
                                }
                            }
                        }
                        create_army = {
                            type = robotic_conscript_army_3
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else_if = {
                        limit = {
                            owner = {
                                OR = {
                                    has_technology = tech_droid_workers
                                    is_individual_machine = yes
                                }
                            }
                        }
                        create_army = {
                            type = robotic_conscript_army_2
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else = {
                        create_army = {
                            type = robotic_conscript_army
                            species = prev.species
                            owner = root.owner
                        }
                    }
                }
            }
        }
        #民兵公社不动员奴隶人口
        #你得反思一下自己为啥开了这个还开奴隶制
    }
    #常规
    else = {
        while = {
            count = value:num_mobilization_civilian
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    is_pop_category = civilian
                    is_enslaved = no
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                        has_trait = trait_latent_psionic
                        has_trait = trait_psionic
                    }
                }
                planet = {
                    if = {
                        limit = {
                            owner = {
                                has_tradition = tr_purity_finish
                            }
                        }
                        create_army = {
                            type = gene_warrior_army
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else_if = {
                        limit = {
                            owner = {
                                has_tradition = tr_mutation_finish
                            }
                        }
                        create_army = {
                            type = mutant_army
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else_if = {
                        limit = {
                            owner = {
                                has_tradition = tr_cloning_finish
                            }
                        }
                        create_army = {
                            type = conscript_army
                            species = prev.species
                            owner = root.owner
                        }
                        create_army = {
                            type = clone_conscript_army
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else = {
                        create_army = {
                            type = conscript_army
                            species = prev.species
                            owner = root.owner
                        }
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_psionic
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    is_pop_category = civilian
                    is_enslaved = no
                    OR = {
                        has_trait = trait_latent_psionic
                        has_trait = trait_psionic
                    }
                }
                planet = {
                    create_army = {
                        type = psionic_conscript_army
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        is_pop_category = ruler
                        is_pop_category = specialist
                    }
                }
                planet = {
                    if = {
                        limit = {
                            owner = {
                                is_individual_machine = yes
                                has_tradition = tr_nanotech_finish
                            }
                        }
                        create_army = {
                            type = robotic_conscript_army_nanotech
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else_if = {
                        limit = {
                            owner = {
                                has_country_flag = synth_virtual
                            }
                        }
                        create_army = {
                            type = robotic_conscript_army_virtuality
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else_if = {
                        limit = {
                            owner = {
                                OR = {
                                    has_technology = tech_synthetic_workers
                                    AND = {
                                        is_individual_machine = yes
                                        has_tradition = tr_modularity_finish
                                    }
                                }
                            }
                        }
                        create_army = {
                            type = robotic_conscript_army_3
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else_if = {
                        limit = {
                            owner = {
                                OR = {
                                    has_technology = tech_droid_workers
                                    is_individual_machine = yes
                                }
                            }
                        }
                        create_army = {
                            type = robotic_conscript_army_2
                            species = prev.species
                            owner = root.owner
                        }
                    }
                    else = {
                        create_army = {
                            type = robotic_conscript_army
                            species = prev.species
                            owner = root.owner
                        }
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_thrall
            weighted_random_owned_pop_group = {
                limit = {
                    is_enslaved = yes
                    has_slavery_type = { type = slavery_military }
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = thrall_conscript_army
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
        while = {
            count = value:num_mobilization_slave
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    is_pop_category = civilian
                    is_enslaved = yes
                    NOT = {
                        has_slavery_type = { type = slavery_military }
                    }
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = slave_conscript_army
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
    }
    #死者苏生的额外效果
    if = {
        limit = {
            has_building = building_dread_encampment
        }
        while = {
            count = value:num_mobilization_no_robot
            weighted_random_owned_pop_group = {
                limit = {
                    OR = {
                        has_military_service_type = { type = military_service_full }
                        has_military_service_type = { type = military_service_limited }
                    }
                    is_pop_category = civilian
                    NOR = {
                        has_trait = trait_mechanical
                        has_trait = trait_machine_unit
                    }
                }
                planet = {
                    create_army = {
                        type = undead_conscript_army
                        species = prev.species
                        owner = root.owner
                    }
                }
            }
        }
    }
}