#######################################
# Necrophage "consumption" buildings
#######################################

building_necrophage_elevation_chamber = {
	icon = building_chamber_of_elevation_1
	base_buildtime = @b1_time
	base_cap_amount = 1
	position_priority = 100
	skip_automation_upgrading = yes #colony automation will not try to upgrade this

	desc = {
		trigger = {
			OR = {
				NOT = { exists = owner }
				owner = { is_hive_empire = no }
			}
		}
		text = building_necrophage_elevation_chamber_desc
	}
	desc = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		text = building_necrophage_elevation_chamber_desc_hive
	}

	category = pop_assembly

	potential = {
		exists = owner
		owner = {
			has_origin = origin_necrophage
			has_trait = trait_necrophage
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
			}
		}
		NOT = { has_planet_flag = planetary_station }
	}

	allow = {
		custom_tooltip = {
			fail_text = NO_CULTURE_SHOCK
			NOT = { has_modifier = planet_culture_shock }
		}
		if = {
			limit = { owner = { is_hive_empire = no } }
			NOT = { is_planet_class = pc_hive }
		}
		NOT = { is_planet_class = pc_machine }
		hidden_trigger = {
			if = {
				limit = {
					owner = { is_ai = yes }
				}
				any_owned_species = {
					species_can_be_necrophaged = yes
				}
				num_pops > 5
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_necrophage }
					NOT = { has_trait = trait_necrophage }
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
		}
	}

	planet_modifier = {
		job_necro_apprentice_add = 1
	}

	#you are not meant to run out of necrophaging pops on a planet with this building
	triggered_planet_modifier = {
		potential = {
			num_organic_pops_per_year >= 0.2
		}
		job_necro_apprentice_add = 1
	}
	triggered_planet_modifier = {
		potential = {
			num_organic_pops_per_year >= 0.3
		}
		job_necro_apprentice_add = 1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}

	upgrades = {
		building_necrophage_house_of_apotheosis
	}

	prerequisites = {
	}

	triggered_desc = {
		text = job_necro_apprentice_effect_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = yes
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = yes
			}
		}
	}

	triggered_desc = {
		text = necrophage_elevation_timer_tooltip
		trigger = {
			has_planet_flag = necrophage_elevation_timer
		}
	}

	triggered_desc = {
		text = building_necrophage_elevation_chamber_scaling_tooltip
	}

	is_essential = yes
}

building_necrophage_house_of_apotheosis = {
	icon = building_chamber_of_elevation_2
	base_buildtime = @b3_time
	can_build = no
	position_priority = 100

	category = pop_assembly

	desc = {
		trigger = {
			OR = {
				NOT = { exists = owner }
				owner = { is_hive_empire = no }
			}
		}
		text = building_necrophage_house_of_apotheosis_desc
	}
	desc = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		text = building_necrophage_house_of_apotheosis_desc_hive
	}

	potential = {
		exists = owner
		owner = {
			has_origin = origin_necrophage
			has_trait = trait_necrophage
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
			}
			is_ai = no #the AI will just kill all its necrophytes
		}
		NOT = { has_planet_flag = planetary_station }
	}

	allow = {
		hidden_trigger = {
			if = {
				limit = {
					owner = { is_ai = yes }
				}
				any_owned_species = {
					species_can_be_necrophaged = yes
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_necrophage }
					NOT = { has_trait = trait_necrophage }
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
		}
	}

	planet_modifier = {
		job_necro_apprentice_add = 6
	}

	triggered_planet_modifier = {
		potential = {
			is_planet_class = pc_hive
			exists = owner
			owner = { is_hive_empire = yes }
		}
		job_necro_apprentice_add = 4
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
		}
	}

	prerequisites = {
		tech_glandular_acclimation
	}

	show_tech_unlock_if = {
		has_origin = origin_necrophage
		has_trait = trait_necrophage
	}

	triggered_desc = {
		text = job_necro_apprentice_effect_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = yes
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = yes
			}
		}
	}
	triggered_desc = {
		text = necrophage_elevation_timer_tooltip
		trigger = {
			has_planet_flag = necrophage_elevation_timer
		}
	}
}

#############
# Clone vats
#############
#克隆舱
building_clone_vats = {
	base_buildtime = @b1_time
	category = pop_assembly
	base_cap_amount = 1
	potential = {
		exists = owner
		NOR = {
			has_modifier = resort_colony
			has_planet_flag = planetary_station
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
		owner = { is_individual_machine = no }
	}
	destroy_trigger = {
		exists = owner
		owner = {
			is_ai = yes
			OR = {
				is_individual_machine = yes
				has_tradition = tr_synthetics_adopt
			}
		}
	}
	convert_to = {
		building_robot_assembly_plant
		building_machine_assembly_plant
	}
	planet_modifier = {
		planet_pop_assembly_organic_add = 2
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_tradition = tr_genetics_adopt }
		}
		modifier = {
			planet_pop_assembly_organic_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_tradition = tr_genetics_efficient_cloning }
		}
		modifier = {
			planet_pop_assembly_organic_add = 1.5
		}
	}

	resources = {
		category = planet_buildings

		# Base cost
		cost = {
			minerals = 500
		}
		# Org/Lith cost
		cost = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = no }
			}
			food = 500
		}
		cost = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = yes }
			}
			energy = 500
		}

		# Base upkeep
		upkeep = {
			energy = 2
		}
		# Org/Lith upkeep
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = no }
			}
			food = 20
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = yes }
			}
			minerals = 20
		}
	}
	triggered_desc = {
		trigger = {
			has_building = building_robot_assembly_plant
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}

	prerequisites = {
		tech_cloning
	}
}

#############
# Permanent Employment Building
#############

building_posthumous_employment_center = {
	base_buildtime = @b1_time
	base_cap_amount = 1

	category = pop_assembly

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
		owner = {
			is_regular_empire = yes
			has_valid_civic = civic_permanent_employment
		}
		NOT = {	has_planet_flag = planetary_station }
	}

	allow = {
		has_upgraded_capital = yes
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = { has_valid_civic = civic_permanent_employment }
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}

	planet_modifier = {
		job_reassigner_add = 1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}

	triggered_desc = {
		text = job_reassigner_effect_desc
	}
	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_robot_assembly_plant
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}
}

building_toxic_bath_hive = {
	base_buildtime = @b1_time
	base_cap_amount = 1
	category = amenity
	icon = building_toxic_bath_hive

	potential = {
		owner = {
			is_hive_empire = yes
			has_valid_civic = civic_hive_toxic_baths
		}
		NOT = { has_planet_flag = planetary_station }
	}
	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				NOT = { has_valid_civic = civic_hive_toxic_baths }
				AND = {
					is_ai = yes
					prev = { has_any_industry_district = no }
				}
			}
		}
	}
	planet_modifier = {
		job_bath_attendant_hive_add = @b1_jobs
	}

	triggered_desc = {
		trigger = {
			exists = owner
		}
		text = job_toxic_baths_effect_hive_desc
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
}

building_toxic_bath_machine = {
	base_buildtime = @b1_time
	base_cap_amount = 1
	category = amenity
	icon = building_toxic_bath_machine

	potential = {
		owner = {
			is_machine_empire = yes
			has_valid_civic = civic_machine_toxic_baths
		}
		NOT = { has_planet_flag = planetary_station }
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_machine_empire = no }
			owner = {
				NOT = { has_valid_civic = civic_machine_toxic_baths }
			}
		}
	}
	planet_modifier = {
		job_bath_attendant_machine_add = @b1_jobs
	}

	triggered_desc = {
		trigger = {
			exists = owner
		}
		text = job_toxic_baths_effect_machine_desc
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
}

#############
# 医院
#############
#医学研究所
building_clinic = {
	base_buildtime = @b1_time
	base_cap_amount = 1
	category = pop_assembly
	potential = {
		owner = {
			is_regular_empire = yes
		}
		NOR = {
			has_modifier = slave_colony
			has_planet_flag = planetary_station
			owner = { has_country_flag = synthetic_empire }
		}
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOR = {
					is_regular_empire = yes
					AND = {
						has_origin = origin_fear_of_the_dark
						is_country_type = primitive
					}
				}
			}
			owner = { has_country_flag = synthetic_empire }
			has_modifier = slave_colony
			AND = {
				buildings_stop_pop = yes
				owner = { is_ai = yes }
			}
		}
	}
	planet_modifier = {
		job_healthcare_add = 2
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_policy_flag = mixed_healthcare
					has_policy_flag = public_healthcare
				}
			}
		}
		modifier = {
			job_healthcare_add = 2
		}
	}
	resources = {
		category = planet_buildings
		cost = {
			minerals = 300
		}
		upkeep = {
			energy = @b1_upkeep
		}
		upkeep = {
			trigger = {
				owner = {
					has_policy_flag = mixed_healthcare
				}
			}
			energy = 0.5
		}
	}
	prerequisites = {
		"tech_medical_system"
	}
	upgrades = {
		"building_hospital"
	}
	triggered_desc = {
		text = job_healthcare_effect_desc
	}

	inline_script = { script = maid_buildings_change/maid_building_clinic_jobs_and_modifiers } #Rogue Maid

	on_repaired = {
		if = {
			limit = {
				planet.owner = {
					has_event_chain = payback_out_of_warranty_chain
				}
			}
			random_list = {
				50 = { # still broken
					planet.owner = {
						country_event = { id = origin.4302 }
					}
					modifier = {
						factor = 0
						planet.owner = { has_technology = tech_frontier_health }
					}
				}
				20 = { # repaired
					planet.owner = {
						country_event = { id = origin.4301 }
					}
					modifier = {
						factor = 2
						planet.owner = { num_research_agreements = 1 }
					}
					modifier = {
						factor = 3
						planet.owner = { num_research_agreements = 2 }
					}
					modifier = {
						factor = 4
						planet.owner = { num_research_agreements >= 3 }
					}
				}
				10 = { # broken beyond repair
					planet = {
						planet_event = { id = origin.4303 }
					}
				}
			}
		}
	}
}

#基因诊所
building_hospital = {
	base_buildtime = @b2_time
	can_build = no
	category = pop_assembly
	allow = {
		has_upgraded_capital = yes
	}
	potential = {
		has_building = building_clinic
		owner = {
			OR = {
				is_regular_empire = yes
				AND = {
					has_origin = origin_fear_of_the_dark
					is_country_type = primitive
				}
			}
		}
		NOT = {
			has_modifier = slave_colony
		}
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_regular_empire = no
			}
			owner = { has_country_flag = synthetic_empire }
			has_modifier = slave_colony
			AND = {
				buildings_stop_pop = yes
				owner = {
					is_ai = yes
				}
			}
		}
	}
	planet_modifier = {
		job_healthcare_add = 4
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_policy_flag = mixed_healthcare
					has_policy_flag = public_healthcare
				}
			}
		}
		modifier = {
			job_healthcare_add = 2
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
		}
		upkeep = {
			trigger = {
				owner = {
					has_policy_flag = mixed_healthcare
				}
			}
			energy = 1
		}
	}
	prerequisites = {
		"tech_frontier_health"
	}
	upgrades = {
		"building_medical_center"
	}
	show_tech_unlock_if = {
		is_regular_empire = yes
	}
	triggered_desc = {
		text = job_healthcare_effect_desc
	}

	inline_script = { script = maid_buildings_change/maid_building_clinic_jobs_and_modifiers } #Rogue Maid
}

#基因医院
building_medical_center = {
	base_buildtime = @b3_time
	can_build = no
	category = pop_assembly
	potential = {
		has_building = building_hospital
	}
	allow = {
		has_major_upgraded_capital = yes
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_regular_empire = no
			}
			owner = { has_country_flag = synthetic_empire }
			has_modifier = slave_colony
			AND = {
				buildings_stop_pop = yes
				owner = { is_ai = yes }
			}
		}
	}
	planet_modifier = {
		job_healthcare_add = 6
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_policy_flag = mixed_healthcare
					has_policy_flag = public_healthcare
				}
			}
		}
		modifier = {
			job_healthcare_add = 3
		}
	}
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			exotic_gases = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			exotic_gases = @b3_rare_upkeep
		}
		upkeep = {
			trigger = {
				owner = {
					has_policy_flag = mixed_healthcare
				}
			}
			energy = 2
		}
	}
	prerequisites = {
		"tech_frontier_hospital"
	}
	triggered_desc = {
		text = job_healthcare_effect_desc
	}
}

#############
# Robot buildings
#############

building_robot_assembly_plant = {
	base_buildtime = @b1_time
	base_cap_amount = 1

	category = pop_assembly

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_robotic_species = yes }
		}
		owner = {
			is_regular_empire = yes
			is_individual_machine = no
			NOT = { has_policy_flag = robots_outlawed }
			OR = {
				is_ai = no
				NOT = { has_ascension_perk = ap_engineered_evolution }
				is_materialist = yes
			}
		}
		NOR = {
			has_modifier = slave_colony
			has_modifier = resort_colony
		}
	}

	convert_to = {
		building_machine_assembly_plant
	}

	upgrades = {
		building_robot_assembly_complex
	}

	allow = {
		hidden_trigger = {
			OR = {
				owner = { is_ai = no }
				NAND = {
					free_district_slots = 0
					free_building_slots <= 1
					free_housing <= 0
					free_jobs <= 0
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no
					has_policy_flag = robots_outlawed
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
			owner = {
				is_ai = yes
				has_ascension_perk = ap_engineered_evolution
				is_materialist = no
			}
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				NOT = { has_tradition = tr_cybernetics_finish }
			}
		}
		job_roboticist_add = 1
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_tradition = tr_cybernetics_finish
			}
		}
		job_healthcare_synthetic_add = 1
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_origin = origin_mechanists
					is_individual_machine = yes
					has_country_flag = synthetic_empire
				}
			}
			any_owned_pop = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_unscheduled_updates
			}
		}
		modifier = {
			planet_pop_assembly_mult = 0.1
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_safe_updates
			}
		}
		modifier = {
			planet_pop_assembly_mult = -0.1
			planet_stability_add = 5
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
		}
		upkeep = {
			energy = @b2_upkeep
		}
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				NOT = { has_tradition = tr_cybernetics_finish }
			}
		}
		text = job_roboticist_effect_desc
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_tradition = tr_cybernetics_finish
			}
		}
		text = job_healthcare_synthetic_effect_desc
	}

	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_clone_vats
				has_building = building_clone_army_clone_vat
				has_building = building_posthumous_employment_center
				AND = {
					exists = assembling_species
					assembling_species = { is_organic_species = yes }
					exists = owner
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}

	prerequisites = {
		"tech_robotic_workers"
	}
}

building_robot_assembly_complex = {
	icon = building_machine_assembly_complex
	base_buildtime = @b3_time
	can_build = no

	category = pop_assembly

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_robotic_species = yes }
		}
		owner = {
			is_regular_empire = yes
			is_individual_machine = no
			NOT = { has_policy_flag = robots_outlawed }
			OR = {
				is_ai = no
				NOT = { has_ascension_perk = ap_engineered_evolution }
				is_materialist = yes
			}
		}
		NOT = { has_modifier = slave_colony }
	}

	convert_to = {
		building_machine_assembly_complex
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no
					has_policy_flag = robots_outlawed
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
			owner = {
				is_ai = yes
				has_ascension_perk = ap_engineered_evolution
				is_materialist = no
			}
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				NOT = { has_tradition = tr_cybernetics_finish }
			}
		}
		job_roboticist_add = 2
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_tradition = tr_cybernetics_finish
			}
		}
		job_healthcare_synthetic_add = 2
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_origin = origin_mechanists
					is_individual_machine = yes
					has_country_flag = synthetic_empire
				}
			}
			any_owned_pop = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 4
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_unscheduled_updates
			}
		}
		modifier = {
			planet_pop_assembly_mult = 0.1
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_safe_updates
			}
		}
		modifier = {
			planet_pop_assembly_mult = -0.1
			planet_stability_add = 5
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			rare_crystals = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			rare_crystals = @b3_rare_upkeep
		}
	}

	prerequisites = {
		tech_robot_assembly_complex
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				NOT = { has_tradition = tr_cybernetics_finish }
			}
		}
		text = job_roboticist_effect_desc
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_tradition = tr_cybernetics_finish
			}
		}
		text = job_healthcare_synthetic_effect_desc
	}

	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_clone_vats
				has_building = building_clone_army_clone_vat
				has_building = building_posthumous_employment_center
				AND = {
					exists = assembling_species
					assembling_species = { is_organic_species = yes }
					exists = owner
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}
}